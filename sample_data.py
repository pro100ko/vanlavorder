import pandas as pd
import numpy as np
from datetime import datetime, timedelta
import random

def generate_sample_data():
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø—Ä–∏–º–µ—Ä–æ–≤ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –¥–∞—Ç—ã –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 30 –¥–Ω–µ–π
    end_date = datetime.now()
    start_date = end_date - timedelta(days=30)
    dates = pd.date_range(start=start_date, end=end_date, freq='D')
    
    # –°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤
    products = [
        "–≠–∫–ª–µ—Ä", "–¢–∏—Ä–∞–º–∏—Å—É", "–ß–∏–∑–∫–µ–π–∫", "–ù–∞–ø–æ–ª–µ–æ–Ω", "–ú–µ–¥–æ–≤–∏–∫",
        "–ü—Ä–∞–≥–∞", "–°–º–µ—Ç–∞–Ω–Ω–∏–∫", "–ü—Ç–∏—á—å–µ –º–æ–ª–æ–∫–æ", "–ö—Ä–∞—Å–Ω—ã–π –±–∞—Ä—Ö–∞—Ç", "–¢–æ—Ä—Ç –ú–æ–ª–æ—á–Ω—ã–π"
    ]
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ–¥–∞–∂
    sales_data = []
    for date in dates:
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç 3 –¥–æ 8 —Ç–æ–≤–∞—Ä–æ–≤ –≤ –¥–µ–Ω—å
        num_products = random.randint(3, 8)
        daily_products = random.sample(products, num_products)
        
        for product in daily_products:
            # –ë–∞–∑–æ–≤–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–¥–∞–∂
            base_amount = random.randint(10, 50)
            
            # –ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ –¥–Ω—è–º –Ω–µ–¥–µ–ª–∏
            if date.weekday() in [5, 6]:  # –í—ã—Ö–æ–¥–Ω—ã–µ
                base_amount = int(base_amount * 1.5)
            
            # –ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ –ø–æ–≥–æ–¥–µ (—Å–∏–º—É–ª—è—Ü–∏—è)
            if random.random() < 0.3:  # 30% —à–∞–Ω—Å –∂–∞—Ä–∫–æ–π –ø–æ–≥–æ–¥—ã
                base_amount = int(base_amount * 0.8)  # –ú–µ–Ω—å—à–µ –ø—Ä–æ–¥–∞–∂ –≤ –∂–∞—Ä—É
            
            sales_data.append({
                '–¥–∞—Ç–∞': date.strftime('%Y-%m-%d'),
                '—Ç–æ–≤–∞—Ä': product,
                '–∫–æ–ª-–≤–æ': base_amount
            })
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ —Å–ø–∏—Å–∞–Ω–∏–π
    writeoffs_data = []
    for date in dates:
        # –°–ø–∏—Å–∞–Ω–∏—è –ø—Ä–æ–∏—Å—Ö–æ–¥—è—Ç —Ä–µ–∂–µ
        if random.random() < 0.4:  # 40% —à–∞–Ω—Å —Å–ø–∏—Å–∞–Ω–∏–π –≤ –¥–µ–Ω—å
            num_writeoffs = random.randint(1, 3)
            writeoff_products = random.sample(products, num_writeoffs)
            
            for product in writeoff_products:
                # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ø–∏—Å–∞–Ω–∏–π –º–µ–Ω—å—à–µ –ø—Ä–æ–¥–∞–∂
                writeoff_amount = random.randint(1, 5)
                
                writeoffs_data.append({
                    '–¥–∞—Ç–∞': date.strftime('%Y-%m-%d'),
                    '—Ç–æ–≤–∞—Ä': product,
                    '–∫–æ–ª-–≤–æ': writeoff_amount
                })
    
    # –°–æ–∑–¥–∞–µ–º DataFrame
    sales_df = pd.DataFrame(sales_data)
    writeoffs_df = pd.DataFrame(writeoffs_data)
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ Excel —Ñ–∞–π–ª—ã
    sales_df.to_excel('sample_sales.xlsx', index=False)
    writeoffs_df.to_excel('sample_writeoffs.xlsx', index=False)
    
    print("‚úÖ –°–æ–∑–¥–∞–Ω—ã –ø—Ä–∏–º–µ—Ä—ã –¥–∞–Ω–Ω—ã—Ö:")
    print(f"üìä –ü—Ä–æ–¥–∞–∂–∏: {len(sales_data)} –∑–∞–ø–∏—Å–µ–π -> sample_sales.xlsx")
    print(f"üìâ –°–ø–∏—Å–∞–Ω–∏—è: {len(writeoffs_data)} –∑–∞–ø–∏—Å–µ–π -> sample_writeoffs.xlsx")
    print("\nüìã –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ñ–∞–π–ª–∞ –ø—Ä–æ–¥–∞–∂:")
    print(sales_df.head())
    print("\nüìã –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ñ–∞–π–ª–∞ —Å–ø–∏—Å–∞–Ω–∏–π:")
    print(writeoffs_df.head())

if __name__ == "__main__":
    generate_sample_data() 